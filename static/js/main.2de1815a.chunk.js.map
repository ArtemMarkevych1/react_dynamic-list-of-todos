{"version":3,"sources":["components/PropTypes/PropTypes.js","components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["userShape","PropTypes","shape","id","number","name","string","email","isRequired","User","arrayOf","title","completed","bool","user","_ref","data","react_default","a","createElement","TodoItem","todo","className","components_User_User","TodoList","todos","map","components_TodoItem_TodoItem","key","dataTodos","dataUsers","App","state","users","isLoading","isLoaded","hasError","isSorted","selectedSort","getTodosWithUsers","usersList","_objectSpread","find","item","userId","handleClick","_callee","_ref2","_ref3","responseTodos","responseUsers","regenerator_default","wrap","_context","prev","next","_this","setState","Promise","all","fetch","sent","Object","slicedToArray","json","t0","stop","_this$state","this","textOnButton","Fragment","components_TodoList_TodoList","type","onClick","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"+VAEMA,EAAYC,IAAUC,MAAM,CAChCC,GAAIF,IAAUG,OACdC,KAAMJ,IAAUK,OAChBC,MAAON,IAAUK,SAChBE,WCWYC,GDRNR,IAAUS,QACfT,IAAUC,MAAM,CACdC,GAAIF,IAAUG,OACdO,MAAOV,IAAUK,OACjBM,UAAWX,IAAUY,OACpBL,YACHA,WAIIP,IAAUC,MAAMF,GAAWQ,WAI3BP,IAAUC,MAAM,CACpBC,GAAIF,IAAUG,OACdO,MAAOV,IAAUK,OACjBM,UAAWX,IAAUY,KACrBC,KAAMb,IAAUC,MAAMF,KACrBQ,iBCxBQ,SAAAO,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACXC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACGH,EAAKX,MAERY,EAAAC,EAAAC,cAAA,SACGH,EAAKT,UCMGa,SAXE,SAAAL,GAAA,IAAGM,EAAHN,EAAGM,KAAH,OACfJ,EAAAC,EAAAC,cAAA,MAAIG,UAAWD,EAAKT,UAAY,iBAAmB,gBACjDK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACI,EAAD,CAAMP,KAAMK,EAAKP,QAEnBG,EAAAC,EAAAC,cAAA,KAAGG,UAAU,gBAAgBD,EAAKV,UCGvBa,SARE,SAAAT,GAAgB,IAAZU,EAAYV,EAAZU,MACnB,OAAQR,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACpBG,EAAMC,IAAI,SAAAL,GAAI,OAAKJ,EAAAC,EAAAC,cAACQ,EAAD,CAAUN,KAAMA,EAAMO,IAAKP,EAAKlB,sOCHxD,IAAM0B,EAAS,6CACTC,EAAS,6CAgFAC,6MA5EbC,MAAQ,CACNP,MAAO,GACPQ,MAAO,GACPC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,aAAc,iBAGhBC,kBAAoB,SAACd,EAAOe,GAAR,OAAuBf,EAAMC,IAC/C,SAAAL,GAAI,4VAAAoB,CAAA,GACCpB,EADD,CAEFP,KAAM0B,EAAUE,KAAK,SAAAC,GAAI,OAAIA,EAAKxC,KAAOkB,EAAKuB,gBAIlDC,iCAAc,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAzB,EAAAQ,EAAA,OAAAkB,EAAAjC,EAAAkC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZC,EAAKC,SAAS,CAAEvB,WAAW,IADfmB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAImCG,QAAQC,IAAI,CACvDC,MAAM/B,GACN+B,MAAM9B,KANE,cAAAiB,EAAAM,EAAAQ,KAAAb,EAAAc,OAAAC,EAAA,EAAAD,CAAAf,EAAA,GAIHE,EAJGD,EAAA,GAIYE,EAJZF,EAAA,GAAAK,EAAAE,KAAA,GASUN,EAAce,OATxB,eASJvC,EATI4B,EAAAQ,KAAAR,EAAAE,KAAA,GAUUL,EAAcc,OAVxB,QAUJ/B,EAVIoB,EAAAQ,KAYVL,EAAKC,SAAS,CACZhC,QACAQ,QACAE,UAAU,IAfFkB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAkBVG,EAAKC,SAAS,CACZrB,UAAU,EACVF,WAAW,IApBH,yBAAAmB,EAAAa,SAAApB,EAAA,0FAyBL,IAAAqB,EAOHC,KAAKpC,MALPP,EAFK0C,EAEL1C,MACAQ,EAHKkC,EAGLlC,MACAC,EAJKiC,EAILjC,UACAC,EALKgC,EAKLhC,SACAC,EANK+B,EAML/B,SAEIiC,EAAgBjC,EAAW,YAAc,aAG/C,OACEnB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACZa,EACClB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoD,SAAA,KACErD,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAACoD,EAAD,CAAU9C,MAAO2C,KAAK7B,kBAAkBd,EAAOQ,MAGjDhB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoD,SAAA,KACErD,EAAAC,EAAAC,cAAA,UACGiB,EAAW,0BAA4B,yBAE1CnB,EAAAC,EAAAC,cAAA,UAAQqD,KAAK,SAASC,QAASL,KAAKvB,aACjCX,EAAY,YAAcmC,YAnEvBK,aCJlBC,IAASC,OAAO3D,EAAAC,EAAAC,cAAC0D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.2de1815a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst userShape = PropTypes.shape({\n  id: PropTypes.number,\n  name: PropTypes.string,\n  email: PropTypes.string,\n}).isRequired;\n\nexport const TodoListProps = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport const UserProps = {\n  data: PropTypes.shape(userShape).isRequired,\n};\n\nexport const TodoItemProps = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.shape(userShape),\n  }).isRequired,\n};\n","import React from 'react';\nimport { UserProps } from '../PropTypes/PropTypes';\nimport './User.css';\n\nconst User = ({ data }) => (\n  <div>\n    <p>\n      {data.name}\n    </p>\n    <p>\n      {data.email}\n    </p>\n  </div>\n);\n\nUser.propTypes = UserProps;\n\nexport default User;\n","import React from 'react';\nimport { TodoItemProps } from '../PropTypes/PropTypes';\nimport User from '../User/User';\nimport './TodoItem.css';\n\nconst TodoItem = ({ todo }) => (\n  <li className={todo.completed ? 'card bg--green' : 'card bg--red'}>\n    <div>\n      <User data={todo.user} />\n    </div>\n    <p className=\"card-content\">{todo.title}</p>\n  </li>\n);\n\nTodoItem.propTypes = TodoItemProps;\n\nexport default TodoItem;\n","import React from 'react';\nimport { TodoListProps } from '../PropTypes/PropTypes';\nimport TodoItem from '../TodoItem/TodoItem';\nimport './TodoList.css';\n\nconst TodoList = ( { todos }) => {\n  return (<div className=\"todos-list\">\n    {todos.map(todo => (<TodoItem todo={todo} key={todo.id} />))}\n  </div>);\n};\n\nTodoList.propTypes = TodoListProps;\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList/TodoList';\n\nconst dataTodos = `https://jsonplaceholder.typicode.com/todos`;\nconst dataUsers = `https://jsonplaceholder.typicode.com/users`;\n\n\nclass App extends Component {\n  state = {\n    todos: [],\n    users: [],\n    isLoading: false,\n    isLoaded: false,\n    hasError: false,\n    isSorted: false,\n    selectedSort: 'Do not sort',\n  } // started oprions\n\n  getTodosWithUsers = (todos, usersList) => (todos.map(\n    todo => ({\n      ...todo,\n      user: usersList.find(item => item.id === todo.userId),\n    })\n  ));\n\n  handleClick = async () => {\n    this.setState({ isLoading: true });\n    // after click default p-r changes from - to +\n    try {\n      const [responseTodos, responseUsers] = await Promise.all([\n        fetch(dataTodos),\n        fetch(dataUsers),\n      ]);\n\n      const todos = await responseTodos.json();\n      const users = await responseUsers.json();// change to json format\n\n      this.setState({\n        todos,\n        users,\n        isLoaded: true,\n      });\n    } catch (error) {\n      this.setState({\n        hasError: true, // some error occured\n        isLoading: false, // not loading\n      });\n    }\n  };\n\n  render() {\n    const {\n      todos,\n      users,\n      isLoading,\n      isLoaded,\n      hasError,\n    } = this.state // her options\n    const textOnButton = (hasError ? 'Try again' : 'Load todos');\n    // special parameter for button option\n\n    return (\n      <div className=\"App\">\n        {isLoaded ? ( // first option if load was successfull\n          <>\n            <h1>Dynamic list of todos</h1>\n            <TodoList todos={this.getTodosWithUsers(todos, users)} />\n          </>\n        ) : (\n          <>\n            <h1>\n              {hasError ? 'Error : Failed to fetch' : 'Dynamic list of todos'}\n            </h1>\n            <button type=\"button\" onClick={this.handleClick}>\n              {isLoading ? 'Loading..' : textOnButton}\n            </button>\n          </>\n        )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}